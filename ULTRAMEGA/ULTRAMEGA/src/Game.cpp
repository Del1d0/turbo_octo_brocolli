#include "../include/Game.h"
#include <iostream>

Game::Game(int winX, int winY, double plSpeed) :
	xWindow(winX),
	yWindow(winY),
	mPlayer1(Player(Vector2(winX / 2, winY - 0.1 * winY), plSpeed))
{
}

Game::Game(int winX, int winY) :
	xWindow(winX),
	yWindow(winY),
	mPlayer1(Player(Vector2(winX / 2, winY - 0.1 * winY), 1))
{
}

void Game::initGame()
{
	//mPlayer1.setPosition(xWindow / 2, yWindow / 2); // initialize player position

	//инициализация фоновых объектов (облака для начала)
}

void Game::update()
{
	// обновить координаты игрока на основании ввода (или выстрелить)
	mPlayer1.action();
	std::cout << "Player position: x = " << mPlayer1.getPosition().x << "\t, y = " << mPlayer1.getPosition().y << std::endl;
	
	// обновить координаты врагов на основании их контроллеров
	// можно параметризовать кривую, по которой они двигаются, чтобы они шли друг за другом паровозиком по зигзагу
	// шахматный порядок или еще что, в зависимости от типа врага

	// обновить положения снарядов, ракет и прочего

	// передвинуть облака и прочие фоновые объекты вниз
	// столкновения с ними ничего не делают
	// вообще проверяется столкновение только игрока со снарядами, либо снарадов с врагами (враги не наносят урона своим)

	// передвинуть бонусы

	// прострелять всем кому можно (вообще у каждого типа врага разное оружие и скорострельность, соответсвенно,
	// нужно как-то отслеживать, что у врага идет КД (перезарядка) (заводить отдельный таймер для каждого типа оружия?)
}

void Game::checkCollisions()
{
	// тут же проверку на выход за границу

	// игрок вышел за гарницы поля? -> вернуть его назад на самую границу иначе ничего не делаем

	// враги вышли за границы поля + длина врага? -> удалить его (вызвать деструктор? или просто удалить из массива?)

	// проверяем попадание снаряда и пр. в область хитбокса игрока
	// если щит присутствует, то дамажим его, иначе дамажим игрока

	// проверяем бонусы, начисляем очки\хп\щиты\бусты\оружие (завести enum с бонусами)
}

bool Game::checkGameOver()
{
	// if(p1.getHp() <= 0)
	//    умираем

	// пока умираем только так, в приницпе, можно добавить режим, где мы защищаем союзника от волн, тогда добавится условие
	// на хп для союзника
	return false;
}

void Game::render()
{
	// отрисовка фона
	// отрисовка игрока
	// отрисовка врагов
	// отрисовка снарядов
}

bool Game::spawnNewEnemyWave()
{
	if (mEnemies.size() >= 0)
	{
		
	}
	else
		return false;
}

